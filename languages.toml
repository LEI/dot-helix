# https://github.com/helix-editor/helix/blob/master/languages.toml

[[language]]
name = "bash"
auto-format = true
formatter = { command = "shfmt", args = ["-i", "2"] }

#[[language]]
#name = "css"
#formatter = { command = "prettier", args = ["--parser", "css"] }

#[[language]]
#name = "html"
#formatter = { command = "prettier", args = ["--parser", "html"] }

[[language]]
name = "ini"
file-types = ["ini", { suffix = "kitty.conf" }] # FIXME

[[language]]
name = "javascript"
auto-format = true
# formatter = { command = "prettier", args = ["--parser", "typescript"] }
# formatter = { command = "deno", args = ["fmt", "-", "--ext", "js" ] }

[[language]]
name = "jsx"
auto-format = true
formatter = { command = "deno", args = ["fmt", "-", "--ext", "jsx"] }

[[language]]
name = "json"
formatter = { command = "prettier", args = ["--parser", "json"] }
# formatter = { command = "deno", args = ["fmt", "-", "--ext", "json"] }

[[language]]
name = "lua"
auto-format = true
# PR: current file in formatter args https://github.com/helix-editor/helix/pull/5626
# formatter = { command = "stylua", args = ["--search-parent-directories", "--stdin-filepath", "{}", "-"] }

[[language]]
name = "markdown"
auto-format = true
formatter = { command = "prettier", args = ["--parser", "markdown"] }
# formatter = { command = "deno", args = ["fmt", "-", "--ext", "md"] }

[[language]]
name = "python"
auto-format = true
formatter = { command = "sh", args = ["-c", "black --quiet - | isort -"] }

[[language]]
name = "rust"
auto-format = true
formatter = { command = "rustfmt", args = ["--emit=stdout"] }

[language-server.rust-analyzer.config]
checkOnSave = { command = "clippy" }
# rust-analyzer.cargo.features = "all"

[[language]]
name = "toml"
auto-format = true
formatter = { command = "taplo", args = ["fmt", "-"] }
# https://github.com/helix-editor/helix/issues/5174#issuecomment-1353668616
language-servers = ["none"]

[language-server.none]
command = ""

[[language]]
name = "typescript"
auto-format = true
#formatter = { command = "prettier", args = ["--parser", "typescript"] }
# formatter = { command = "deno", args = ["fmt", "-", "--ext", "ts" ] }
# pass format options according to https://github.com/typescript-language-server/typescript-language-server#workspacedidchangeconfiguration omitting the "[language].format." prefix.
# config = { format = { "semicolons" = "insert", "insertSpaceBeforeFunctionParenthesis" = true } }
language-servers = ["typescript-language-server", "eslint"]

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.eslint.config]
validate = "on"
experimental = { useFlatConfig = false }
rulesCustomizations = []
run = "onType"
problems = { shortenToSingleLine = false }
nodePath = ""
# debug = true
# quiet = false
# packageManager = "npm"
# options = {}
# codeActionsOnSave.rules = []
# [codeAction]
# disableRuleComment = { enable = true, location = "sameLine" }
# showDocumentation = { enable = true }
# mode = "all"

format = true
#nodePath = ""
onIgnoredFiles = "off"
#packageManager = "yarn"
#quiet = false
#rulesCustomizations = []
#run = "onType"
useESLintClass = false
#validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
codeActionOnSave = { mode = "all" }
#experimental = {}
#problems = { shortenToSingleLine = false }
workingDirectory = { mode = "auto" }


[[language]]
name = "tsx"
auto-format = true
formatter = { command = "deno", args = ["fmt", "-", "--ext", "tsx"] }

[[language]]
name = "yaml"
auto-format = true
formatter = { command = "prettier", args = ["--parser", "yaml"] }
